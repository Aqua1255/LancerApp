spring:
  data:
    rest:
      base-path: /api
  datasource:
    # CONNECTION_POSTGRES_URL
    url: jdbc:postgresql://${Lancer_HOSTNAME:localhost}:${Lancer_PORT:5432}/${Lancer_DB_NAME:LancerApp_DB_Postgresql}
#    driver-class-name: org.h2.Driver
    username: ${Lancer_username:machine}
    password: ${Lancer_password:mickeyMantle}
    driver-class-name: org.postgresql.Driver
  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
  # Testing with Postgres
  #    username: todo
  #    password: todo
#    jpa:
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        ddl-auto: none
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: never
  flyway:
    locations: classpath:/db/migration
    ignore-missing-migrations: false
    out-of-order: true
    baseline-on-migrate: true
#  security:
#    oauth2:
#      client:
#        registration:
#          sso:
#            client-id: urn:gov:gsa:openidconnect.profiles:sp:sso:lancer_bde:lancer_app
#            authorization-grant-type: authorization_code
#            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#            scope:
#              - openid
#              - email
#        provider:
#          sso:
#            authorization-uri: https://idp.int.identitysandbox.gov/openid_connect/authorize?acr_values=http://idmanagement.gov/ns/assurance/ial/1
#            token-uri: https://idp.int.identitysandbox.gov/api/openid_connect/token
#            user-info-uri: https://idp.int.identitysandbox.gov/api/openid_connect/userinfo
#            jwk-set-uri: https://idp.int.identitysandbox.gov/api/openid_connect/certs
#            user-name-attribute: sub

